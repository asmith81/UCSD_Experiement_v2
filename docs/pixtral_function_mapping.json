{
    "notebook": "notebooks/pixtral_evaluation.ipynb",
    "cells": [
        {
            "id": "environment_setup",
            "description": "Setup environment and logging",
            "required_functions": [
                {
                    "name": "setup_environment",
                    "path": "src/environment.py",
                    "signature": {
                        "parameters": {
                            "cuda_visible_devices": {"type": "Optional[str]", "default": "None"},
                            "seed": {"type": "int", "default": 42},
                            "project_root": {"type": "Optional[Path]", "default": "None"}
                        },
                        "returns": "Dict[str, Any]"
                    }
                }
            ]
        },
        {
            "id": "configuration",
            "description": "Load and validate configuration",
            "required_functions": [
                {
                    "name": "load_yaml_config",
                    "path": "src/config.py",
                    "signature": {
                        "parameters": {
                            "config_path": {"type": "str"}
                        },
                        "returns": "Dict[str, Any]"
                    }
                },
                {
                    "name": "load_prompt_template",
                    "path": "src/prompts.py",
                    "signature": {
                        "parameters": {
                            "prompt_strategy": {"type": "str"},
                            "prompts_dir": {"type": "Optional[Path]", "default": "None"}
                        },
                        "returns": "str"
                    }
                }
            ]
        },
        {
            "id": "model_loading",
            "description": "Load model and processor",
            "required_functions": [
                {
                    "name": "load_model",
                    "path": "src/models/loader.py",
                    "signature": {
                        "parameters": {
                            "model_name": {"type": "str"},
                            "config": {"type": "Dict[str, Any]"},
                            "models_dir": {"type": "Optional[Path]", "default": "None"}
                        },
                        "returns": "Tuple[Any, Any]"
                    }
                },
                {
                    "name": "download_pixtral_model",
                    "path": "src/models/pixtral.py",
                    "signature": {
                        "parameters": {
                            "model_path": {"type": "Path"},
                            "repo_id": {"type": "str"}
                        },
                        "returns": "bool"
                    }
                }
            ]
        },
        {
            "id": "test_execution",
            "description": "Execute test suite",
            "required_functions": [
                {
                    "name": "run_test_suite",
                    "path": "src/execution.py",
                    "signature": {
                        "parameters": {
                            "model_name": {"type": "str"},
                            "test_matrix_path": {"type": "Union[str, Path]"},
                            "model_loader": {"type": "Optional[ModelLoader]", "default": "None"},
                            "processor": {"type": "Optional[StandardModelProcessor]", "default": "None"},
                            "prompt_loader": {"type": "Optional[callable]", "default": "None"},
                            "result_validator": {"type": "Optional[callable]", "default": "None"}
                        },
                        "returns": "List[Dict[str, Any]]"
                    }
                },
                {
                    "name": "process_image_wrapper",
                    "path": "src/models/pixtral.py",
                    "signature": {
                        "parameters": {
                            "model": {"type": "Any"},
                            "prompt_template": {"type": "str"},
                            "image_path": {"type": "Union[str, Path]"},
                            "field_type": {"type": "str"},
                            "config": {"type": "DataConfig"}
                        },
                        "returns": "Dict[str, Any]"
                    }
                }
            ]
        },
        {
            "id": "data_handling",
            "description": "Handle data loading and processing",
            "required_functions": [
                {
                    "name": "setup_data_paths",
                    "path": "src/data_utils.py",
                    "signature": {
                        "parameters": {
                            "env_config": {"type": "EnvironmentConfig"},
                            "image_processor": {"type": "Optional[ImageProcessor]", "default": "None"},
                            "image_extensions": {"type": "Optional[List[str]]", "default": "None"},
                            "max_image_size": {"type": "Optional[int]", "default": "None"},
                            "supported_formats": {"type": "Optional[List[str]]", "default": "None"}
                        },
                        "returns": "DataConfig"
                    }
                }
            ]
        },
        {
            "id": "result_processing",
            "description": "Process and save results",
            "required_functions": [
                {
                    "name": "track_execution",
                    "path": "src/results_logging.py",
                    "signature": {
                        "parameters": {
                            "execution_log_path": {"type": "Union[str, Path]"},
                            "model_name": {"type": "str"},
                            "prompt_type": {"type": "str"},
                            "quant_level": {"type": "int"},
                            "status": {"type": "str"},
                            "error": {"type": "Optional[str]", "default": "None"}
                        },
                        "returns": "None"
                    }
                },
                {
                    "name": "log_result",
                    "path": "src/results_logging.py",
                    "signature": {
                        "parameters": {
                            "result_path": {"type": "Union[str, Path]"},
                            "image_id": {"type": "str"},
                            "model_output": {"type": "Dict[str, Any]"},
                            "ground_truth": {"type": "GroundTruthData"},
                            "processing_time": {"type": "float"},
                            "model_name": {"type": "str"},
                            "prompt_type": {"type": "str"},
                            "quant_level": {"type": "int"},
                            "environment": {"type": "Optional[str]", "default": "None"},
                            "storage": {"type": "Optional[ResultStorage]", "default": "None"}
                        },
                        "returns": "None"
                    }
                },
                {
                    "name": "evaluate_model_output",
                    "path": "src/results_logging.py",
                    "signature": {
                        "parameters": {
                            "model_output": {"type": "str"},
                            "ground_truth": {"type": "GroundTruthData"},
                            "field_type": {"type": "str"}
                        },
                        "returns": "Dict[str, Any]"
                    }
                },
                {
                    "name": "validate_results",
                    "path": "src/validation.py",
                    "signature": {
                        "parameters": {
                            "result": {"type": "Dict[str, Any]"},
                            "model_name": {"type": "str"}
                        },
                        "returns": "None"
                    }
                }
            ]
        }
    ],
    "function_principles": {
        "single_responsibility": true,
        "input_validation": true,
        "error_handling": true,
        "logging": true,
        "documentation": true
    },
    "data_flow_validation": {
        "setup_environment": {
            "input": "None",
            "output": "Dict[str, Any]",
            "validation_chain": [
                "setup_environment"
            ]
        },
        "load_model": {
            "input": "Dict[str, Any]",
            "output": "Tuple[Any, Any]",
            "validation_chain": [
                "load_model"
            ]
        },
        "run_test_suite": {
            "input": "Dict[str, Any]",
            "output": "List[Dict[str, Any]]",
            "validation_chain": [
                "process_image_wrapper"
            ],
            "error_handling": {
                "raw_output_logging": {
                    "path": "results/raw/{test_id}_raw.json",
                    "error_handling": "continue_on_error"
                },
                "output_processing": {
                    "error_handling": "include_in_result"
                }
            }
        },
        "process_results": {
            "input": "List[Dict[str, Any]]",
            "output": "Dict[str, Any]",
            "validation_chain": [
                "_validate_result_structure",
                "_generate_summary",
                "save_result"
            ]
        }
    },
    "logging_strategy": {
        "raw_outputs": {
            "location": "results/raw",
            "format": "json",
            "naming": "{test_id}_raw.json",
            "error_handling": "continue_on_error"
        },
        "processed_results": {
            "location": "results/processed",
            "format": "json",
            "error_handling": "include_in_result"
        },
        "error_logs": {
            "location": "logs",
            "format": "text",
            "error_handling": "always_log"
        }
    },
    "data_flow": {
        "environment_setup": {
            "input": "None",
            "output": "Dict[str, Any]",
            "transformations": [
                {
                    "step": "setup_environment",
                    "input": "None",
                    "output": "Dict[str, Any]",
                    "error_handling": "ENV001"
                }
            ]
        },
        "configuration": {
            "input": "Dict[str, Any]",
            "output": "Dict[str, Any]",
            "transformations": [
                {
                    "step": "load_yaml_config",
                    "input": "Dict[str, Any]",
                    "output": "Dict[str, Any]",
                    "error_handling": "CONF001"
                },
                {
                    "step": "load_prompt_template",
                    "input": "Dict[str, Any]",
                    "output": "str",
                    "error_handling": "CONF002"
                }
            ]
        },
        "model_loading": {
            "input": "Dict[str, Any]",
            "output": "Tuple[Any, Any]",
            "transformations": [
                {
                    "step": "load_model",
                    "input": "Dict[str, Any]",
                    "output": "Tuple[Any, Any]",
                    "error_handling": "MOD002"
                }
            ]
        },
        "test_execution": {
            "input": "Dict[str, Any]",
            "output": "List[Dict[str, Any]]",
            "transformations": [
                {
                    "step": "process_image_wrapper",
                    "input": "Any",
                    "output": "Dict[str, Any]",
                    "error_handling": "TEST002"
                }
            ]
        },
        "result_processing": {
            "input": "Dict[str, Any]",
            "output": "None",
            "transformations": [
                {
                    "step": "track_execution",
                    "input": "Dict[str, Any]",
                    "output": "None",
                    "error_handling": "LOG001"
                },
                {
                    "step": "log_result",
                    "input": "Dict[str, Any]",
                    "output": "None",
                    "error_handling": "LOG002"
                }
            ]
        }
    },
    "error_codes": {
        "ENV001": {
            "description": "Environment setup error",
            "severity": "high",
            "recovery": "Use default configuration"
        },
        "CONF001": {
            "description": "Configuration loading error",
            "severity": "high",
            "recovery": "Use default configuration"
        },
        "CONF002": {
            "description": "Prompt template loading error",
            "severity": "high",
            "recovery": "Use default prompt"
        },
        "MOD002": {
            "description": "Invalid model configuration",
            "severity": "medium",
            "recovery": "Use default configuration"
        },
        "TEST002": {
            "description": "Model processing failed",
            "severity": "medium",
            "recovery": "Log error and continue"
        },
        "LOG001": {
            "description": "Execution tracking failed",
            "severity": "low",
            "recovery": "Continue without tracking"
        },
        "LOG002": {
            "description": "Result logging failed",
            "severity": "medium",
            "recovery": "Retry with backup storage"
        }
    }
} 